version: "3.8"

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/.gameday
    restart: on-failure
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    networks:
      - app-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m http.server 8000
    environment:
      API_URL: http://backend
      API_PORT: 5000
    ports:
      - "8000:8000"
    networks:
      - app-net
    depends_on:
      - backend

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    command: poetry run python -m backend.app
    environment:
      READER_HOST: db
      WRITER_HOST: db
      DB_PORT: 5432
      DB_USER: appuser
      DB_PASSWORD: password
      DB_NAME: gameday
    volumes:
      - ./backend:/app/backend
      - ./pyproject.toml:/app/pyproject.toml
      - ./poetry.lock:/app/poetry.lock
    ports:
      - "5000:5000"
    networks:
      - app-net
    depends_on:
      - db

networks:
  app-net:
    driver: bridge

